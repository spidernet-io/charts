#!/bin/bash

echo "get endpoints from service ${ENV_SERVICE_NAME} in namespace ${ENV_POD_NAMESPACE}"

APISERVER=https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
TOKEN=$(cat ${SERVICEACCOUNT}/token)
CACERT=${SERVICEACCOUNT}/ca.crt

RES_MSG=` curl -s -w '\n%{http_code}' -k --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/api/v1/namespaces/${ENV_POD_NAMESPACE}/endpoints/${ENV_SERVICE_NAME} `
if (( "$?" == 0 )) ; then
    HTTP_RES_BODY=` sed '$ d' <<< "${RES_MSG}" `
    HTTP_RES_CODE=` sed -n '$ p' <<< "${RES_MSG}" `
    if (( HTTP_RES_CODE != 200 )) ; then
        echo "error, bad http return code: ${HTTP_RES_CODE} "
        exit 1
    fi
    ALL_IP=$( echo "${HTTP_RES_BODY}" | jq '.subsets[0].addresses[].ip ' | tr -d '"' )
    if [ -z "${ALL_IP}" ] ; then
        echo "error, failed to parse the endpoint ip"
        echo "${HTTP_RES_BODY}"
        exit 1
    fi
    echo "all endpoints IP of service ${ENV_SERVICE_NAME}: $( echo "${ALL_IP}" | tr '\n' ' ' )"
    echo "${ALL_IP}" >  allHosts.txt
    echo "all endpoints IP is outputed to allHosts.txt"
    exit 0
else
    echo "error, failed to visit api server"
    exit 1
fi
