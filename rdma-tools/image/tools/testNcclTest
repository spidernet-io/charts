#!/bin/bash

# Copyright 2024 Authors of spidernet-io
# SPDX-License-Identifier: Apache-2.0

#set -x
#set -o pipefail
set -o errexit
set -o nounset

# nccl test requires nvidia-smi tools, if nvidia-smi tools not exist, exit 1
if ! which nvidia-smi &>/dev/null; then
   echo "error, nvidia-smi tools not found"
   exit 1
fi

source /usr/sbin/rdmatools
GPU_NUM=$(GetGPUAmount)
((GPU_NUM > 0)) || {
   echo "error, there is no GPU detected"
   exit 1
}
echo "there is ${GPU_NUM} GPU locally"

POD_IP_LIST=$(getAllEndpoints 2>/dev/null)
POD_NUM=$(echo "${POD_IP_LIST}" | wc -l)
HOST_LIST=$(echo -n "${POD_IP_LIST}" | tr '\n' ',')
((POD_NUM > 0)) || {
   echo "error, failed to detect pods"
   exit 1
}
echo "HOST_LIST: ${HOST_LIST}"

CMD_NAME=${CMD_NAME:-"all_reduce_perf"}
CMD_OPTIONS=${CMD_OPTIONS:-"-b 100M -e 1G -f 2  -n 4 "}

# todo: for infiniband , test sharp: -x NCCL_COLLNET_ENABLE=1  -x NCCL_ALGO=CollNet

echo ""
echo "***************************************************************************************************************"
echo "********************  nccl-test: mpirun for ${CMD_NAME}                         ************************"
echo "********************              hcoll: disabled                                      ************************"
echo "***************************************************************************************************************"

HOST_SLOT=$(echo -n "${HOST_LIST}" | tr ',' "\n" | sed -E 's?(.*)?\1:'${GPU_NUM}'?g' | tr '\n' ',')
PARAMETERS=" -np $((POD_NUM * GPU_NUM)) -H ${HOST_SLOT}  \
   --bind-to none \
   -x PATH \
   -x LD_LIBRARY_PATH \
   -mca coll_hcoll_enable 0 \
   /usr/bin/${CMD_NAME} -g 1  ${CMD_OPTIONS}  "

# todo: each process own one GPU

# for log
echo "-------------------------------  run with enabling GDR and gdrCopy --------------------------"
OPTIONS=" -d -x NCCL_DEBUG=INFO -x NCCL_DEBUG_SUBSYS=ALL \
          -x UCX_LOG_LEVEL=INFO -x UCX_PROTO_ENABLE=y -x UCX_PROTO_INFO=y \
          -x HCOLL_LOG_LEVEL=INFO \
         -x NCCL_GDRCOPY_ENABLE=1 \
         -x NCCL_NET_GDR_READ=1 \
         ${PARAMETERS}  "
echo ""
echo " mpirun ${OPTIONS} "
echo ""
mpirun ${OPTIONS}

# for result
echo ""
echo "------------------------------  run with disabling GDR and gdrCopy -----------------------------"
OPTIONS="\
         -x NCCL_GDRCOPY_ENABLE=0 \
         -x NCCL_NET_GDR_READ=0 \
         ${PARAMETERS}  "
echo ""
echo " mpirun ${OPTIONS} "
echo ""
mpirun ${OPTIONS}

echo ""
echo "-----------------------------   run with enabling GDR and gdrCopy -------------------------------"
OPTIONS="\
         -x NCCL_GDRCOPY_ENABLE=1 \
         -x NCCL_NET_GDR_READ=1 \
         ${PARAMETERS}  "
echo ""
echo " mpirun ${OPTIONS} "
echo ""
mpirun ${OPTIONS}
