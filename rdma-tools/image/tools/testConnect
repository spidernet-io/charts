#!/bin/bash

# Copyright 2024 Authors of spidernet-io
# SPDX-License-Identifier: Apache-2.0

#set -x
#set -o pipefail
set -o errexit
set -o nounset

CURRENT_FILENAME=$( basename $0 )

source /usr/sbin/rdmatools

POD_IP_LIST=${1:-""}
[ -n "${POD_IP_LIST}" ] || { POD_IP_LIST=$( getOtherEndpoints 2>/dev/null ) || true ; }
[ -n "${POD_IP_LIST}" ] || { echo "error, no remote hosts " ; exit 1 ; }

WORKDIR="/tmp/${CURRENT_FILENAME}-$(date +%Y%m%d%H%M%S%N)"
REMOTE_INFOR_DIR="${WORKDIR}/remote"
RESULT_DIR="${WORKDIR}/result"
mkdir -p ${WORKDIR}
mkdir -p ${REMOTE_INFOR_DIR}
mkdir -p ${RESULT_DIR}

echo "collecting local information ..."
LOCAL_IP_INFO=$( GetUpAllIP )
LOCAL_ENDPOINT_IP=$( ip -4 addr show eth0 | grep -oP '(?<=inet\s)[0-9]+(\.[0-9]+){3}'	 )

echo "collecting remote information ..."
EXPECT_NUM=0
for ADDR in ${POD_IP_LIST} ; do
    ((EXPECT_NUM+=1))
    (
        echo "collecting information from ${ADDR}"
        REMOTE_IP_INFO=$( ssh ${ADDR} " source /usr/sbin/rdmatools && GetUpAllIP " )
        if [ -n "${REMOTE_IP_INFO}" ] ; then
              echo "${REMOTE_IP_INFO}" > ${REMOTE_INFOR_DIR}/${ADDR}
        else
              echo "error, failed to get information from remote ${ADDR}"
        fi
    )&
done
wait
NUM=$( ls ${REMOTE_INFOR_DIR} | wc -l  )
(( NUM == EXPECT_NUM )) || { echo "error, failed to get information from all hosts" ; exit 1 ; }
echo "finished collectiong information"

TestPerHostConnnect(){
    REMOTE_HOST="${1}"

    echo "${CURRENT_FILENAME} case: between local node and the remote node ${REMOTE_HOST}  "
    [ -f "${REMOTE_INFOR_DIR}/${REMOTE_HOST}" ] || { echo "error, failed to find ${REMOTE_INFOR_DIR}/${REMOTE_HOST} " ; exit 1 ; }
    RESULT_FILE="${RESULT_DIR}/${REMOTE_HOST}"

    echo "" >> ${RESULT_FILE}
    printf "________________________________________________________________________________________________________________\n" >> ${RESULT_FILE}
    printf "%-40s\t%-40s\t%-40s\n" "from local ${LOCAL_ENDPOINT_IP}" "to remote ${REMOTE_HOST}" "result"  >> ${RESULT_FILE}
    printf "________________________________________________________________________________________________________________\n" >> ${RESULT_FILE}

    while read LINE ; do
        REMOTE_INTERFACE=$( echo "${LINE}" | awk '{print $1}' )
        REMOTE_IP=$( echo "${LINE}" | awk '{print $2}' )
        REMOTE_MASK=$( echo "${LINE}" | awk '{print $3}' )

        OLD=$IFS
        IFS=$'\n'
        for ITEM in ${LOCAL_IP_INFO} ;do
            IFS=$OLD
            LOCAL_INTERFACE=$( echo "${ITEM}" | awk '{print $1}' )
            LOCAL_IP=$( echo "${ITEM}" | awk '{print $2}' )
            LOCAL_MASK=$( echo "${ITEM}" | awk '{print $3}' )

            {
                if [ "${REMOTE_MASK}"x == "${LOCAL_MASK}"x ] && [ -n "${LOCAL_MASK}" ]; then
                    if CheckIPv4SameSubnet "${LOCAL_IP}" "${REMOTE_IP}" "${LOCAL_MASK}" || ( ((LOCAL_MASK==32)) && ((REMOTE_MASK==32))  ) ; then
                        if ping -I ${LOCAL_INTERFACE} -c 2 ${REMOTE_IP} &>/dev/null ; then
                            printf "%-40s\t%-40s\t%-40s\n" "${LOCAL_INTERFACE}/${LOCAL_IP}" "${REMOTE_INTERFACE}/${REMOTE_IP}" "success" >> ${RESULT_FILE}
                        else
                            printf "%-40s\t%-40s\t%-40s\n" "${LOCAL_INTERFACE}/${LOCAL_IP}" "${REMOTE_INTERFACE}/${REMOTE_IP}" "failure" >> ${RESULT_FILE}
                        fi
                    fi
                fi
            } &
        done
    done < ${REMOTE_INFOR_DIR}/${REMOTE_HOST}
    wait

    printf "________________________________________________________________________________________________________________\n" >> ${RESULT_FILE}
    echo "" >> ${RESULT_FILE}
}

TestConnnect(){
    echo ""
    for ADDR in ${POD_IP_LIST} ; do
        (
           TestPerHostConnnect "${ADDR}"
        )&
    done
    wait

    echo ""
    echo "=================================== ${CURRENT_FILENAME} summary ===================================================="
    echo ""
    FILE_LIST=$( ls ${RESULT_DIR} )
    for FILE_NAME in ${FILE_LIST}; do
        cat ${RESULT_DIR}/${FILE_NAME}
    done

    echo ""
    echo "all result is stored in ${RESULT_DIR}"
}

TestConnnect
