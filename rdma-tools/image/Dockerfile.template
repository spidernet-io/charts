# Copyright 2024 Authors of spidernet-io
# SPDX-License-Identifier: Apache-2.0

#============= build tools============

FROM <<ENV_CUDA_DEV_IMAGE_NAME>> as buildtools
# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETOS
# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETARCH

ENV ENV_VERSION_PERFTEST=<<ENV_VERSION_PERFTEST>>
ENV ENV_DOWNLOAD_OFED_DEB_SOURCE=<<ENV_DOWNLOAD_OFED_DEB_SOURCE>>

# build perftest
# Mellanox OFED (latest): required by perftest
#fix warning: debconf: delaying package configuration, since apt-utils is not installed
ARG DEBIAN_FRONTEND=noninteractive
COPY /install-perftest.sh /install-perftest.sh
RUN chmod +x /install-perftest.sh && /install-perftest.sh

# install hpcx and nccltest
ENV ENV_DOWNLOAD_HPCX_URL=<<ENV_DOWNLOAD_HPCX_URL>>
ENV ENV_VERSION_NCCLTEST=<<ENV_VERSION_NCCLTEST>>
COPY /install-hpcx.sh /install-hpcx.sh
RUN chmod +x /install-hpcx.sh && /install-hpcx.sh

#========== root image ==============
FROM <<ENV_BASEIMAGE_FULL_NAME>> as rootfs

# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETOS
# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETARCH

ARG GIT_COMMIT_VERSION
ENV GIT_COMMIT_VERSION=${GIT_COMMIT_VERSION}
ARG GIT_COMMIT_TIME
ENV GIT_COMMIT_TIME=${GIT_COMMIT_TIME}
ARG VERSION
ENV VERSION=${VERSION}

ENV LD_LIBRARY_PATH=<<ENV_LD_LIBRARY_PATH>>
ENV ENV_CUDA_DEB_SOURCE=<<ENV_CUDA_DEB_SOURCE>>
ENV ENV_DOWNLOAD_OFED_DEB_SOURCE=<<ENV_DOWNLOAD_OFED_DEB_SOURCE>>

ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

COPY /install-tools.sh /install-tools.sh
COPY /test.sh /test.sh
COPY /tools /tools
COPY /printpaths.sh /printpaths.sh

# Change the number to force the generation of a new git-tree SHA. Useful when
# we want to re-run 'apt-get upgrade' for stale images.
ENV FORCE_BUILD=1

#fix warning: debconf: delaying package configuration, since apt-utils is not installed
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get upgrade -y

COPY --from=buildtools /buildperftest/bin/*   /usr/bin/
COPY --from=buildtools /buildnccltest/*       /usr/bin/
COPY --from=buildtools /opt/hpcx              /opt/hpcx

WORKDIR /
RUN chmod +x /tools/* && mv /tools/* /usr/sbin && rm -rf /tools
RUN chmod +x /install-tools.sh && /install-tools.sh && rm -f /install-tools.sh
# check binary
RUN chmod +x /test.sh && /test.sh && rm -f /test.sh

CMD ["/usr/bin/sleep","infinity"]
