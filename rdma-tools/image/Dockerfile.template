# Copyright 2024 Authors of spidernet-io
# SPDX-License-Identifier: Apache-2.0

#============= build tools============

FROM <<ENV_CUDA_DEV_IMAGE_NAME>> as buildtools
# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETOS
# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETARCH

ENV ENV_VERSION_PERFTEST=<<ENV_VERSION_PERFTEST>>
ENV ENV_DOWNLOAD_OFED_DEB_SOURCE=<<ENV_DOWNLOAD_OFED_DEB_SOURCE>>
ENV ENV_VERSION_CUDA_SAMPLE=<<ENV_VERSION_CUDA_SAMPLE>>
ENV ENV_GDRCOPY_COMMIT=<<ENV_GDRCOPY_COMMIT>>
ENV ENV_VERSION_NVBANDWIDTH=<<ENV_VERSION_NVBANDWIDTH>>

# build perftest
# Mellanox OFED (latest): required by perftest
#fix warning: debconf: delaying package configuration, since apt-utils is not installed
ARG DEBIAN_FRONTEND=noninteractive
COPY /install-perftest.sh /install-perftest.sh
RUN chmod +x /install-perftest.sh && /install-perftest.sh

# install hpcx and nccltest
ENV ENV_DOWNLOAD_HPCX_URL=<<ENV_DOWNLOAD_HPCX_URL>>
ENV ENV_VERSION_NCCLTEST=<<ENV_VERSION_NCCLTEST>>
COPY /install-hpcx.sh /install-hpcx.sh
RUN chmod +x /install-hpcx.sh && /install-hpcx.sh

#========== root image ==============
FROM <<ENV_BASEIMAGE_FULL_NAME>> as rootfs

# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETOS
# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.
ARG TARGETARCH

ARG GIT_COMMIT_VERSION
ENV GIT_COMMIT_VERSION=${GIT_COMMIT_VERSION}
ARG GIT_COMMIT_TIME
ENV GIT_COMMIT_TIME=${GIT_COMMIT_TIME}
ARG VERSION
ENV VERSION=${VERSION}

ENV LD_LIBRARY_PATH=<<ENV_LD_LIBRARY_PATH>>
ENV ENV_CUDA_DEB_SOURCE=<<ENV_CUDA_DEB_SOURCE>>
ENV ENV_DOWNLOAD_OFED_DEB_SOURCE=<<ENV_DOWNLOAD_OFED_DEB_SOURCE>>

ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

COPY /install-tools.sh /install-tools.sh
COPY /test.sh /test.sh
COPY /tools /tools
COPY /printpaths.sh /printpaths.sh
COPY /entry.sh /entry.sh

# Change the number to force the generation of a new git-tree SHA. Useful when
# we want to re-run 'apt-get upgrade' for stale images.
ENV FORCE_BUILD=1

#fix warning: debconf: delaying package configuration, since apt-utils is not installed
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get upgrade -y

COPY --from=buildtools /buildperftest/bin/*   /usr/bin/
COPY --from=buildtools /buildnccltest/*       /usr/bin/
COPY --from=buildtools /opt/hpcx              /opt/hpcx
COPY --from=buildtools /buildCudaSample/*     /usr/bin/
COPY --from=buildtools /buildGdrcopy          /buildGdrcopy
COPY --from=buildtools /buildNvbandwidth/*     /usr/bin/

WORKDIR /
RUN chmod +x /tools/* && mv /tools/* /usr/sbin && rm -rf /tools
RUN chmod +x /install-tools.sh && /install-tools.sh && rm -f /install-tools.sh
# check binary
RUN chmod +x /test.sh && /test.sh && rm -f /test.sh


# Begin auto-generated paths
ENV HPCX_DIR=/opt/hpcx
ENV HPCX_UCX_DIR=/opt/hpcx/ucx
ENV HPCX_UCC_DIR=/opt/hpcx/ucc
ENV HPCX_SHARP_DIR=/opt/hpcx/sharp
ENV HPCX_NCCL_RDMA_SHARP_PLUGIN_DIR=/opt/hpcx/nccl_rdma_sharp_plugin
ENV HPCX_HCOLL_DIR=/opt/hpcx/hcoll
ENV HPCX_MPI_DIR=/opt/hpcx/ompi
ENV HPCX_OSHMEM_DIR=/opt/hpcx/ompi
ENV HPCX_MPI_TESTS_DIR=/opt/hpcx/ompi/tests
ENV HPCX_OSU_DIR=/opt/hpcx/ompi/tests/osu-micro-benchmarks
ENV HPCX_OSU_CUDA_DIR=/opt/hpcx/ompi/tests/osu-micro-benchmarks-cuda
ENV HPCX_IPM_DIR=""
ENV HPCX_CLUSTERKIT_DIR=/opt/hpcx/clusterkit
ENV OMPI_HOME=/opt/hpcx/ompi
ENV MPI_HOME=/opt/hpcx/ompi
ENV OSHMEM_HOME=/opt/hpcx/ompi
ENV OPAL_PREFIX=/opt/hpcx/ompi
ENV OLD_PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV PATH=/opt/hpcx/sharp/bin:/opt/hpcx/clusterkit/bin:/opt/hpcx/hcoll/bin:/opt/hpcx/ucc/bin:/opt/hpcx/ucx/bin:/opt/hpcx/ompi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV OLD_LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:<<ENV_LD_LIBRARY_PATH>>
ENV LD_LIBRARY_PATH=<<ENV_LD_LIBRARY_PATH>>:/opt/hpcx/nccl_rdma_sharp_plugin/lib:/opt/hpcx/ucc/lib/ucc:/opt/hpcx/ucc/lib:/opt/hpcx/ucx/lib/ucx:/opt/hpcx/ucx/lib:/opt/hpcx/sharp/lib:/opt/hpcx/hcoll/lib:/opt/hpcx/ompi/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64
ENV OLD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs
ENV LIBRARY_PATH=/opt/hpcx/nccl_rdma_sharp_plugin/lib:/opt/hpcx/ompi/lib:/opt/hpcx/sharp/lib:/opt/hpcx/ucc/lib:/opt/hpcx/ucx/lib:/opt/hpcx/hcoll/lib:/opt/hpcx/ompi/lib:/usr/local/cuda/lib64/stubs
ENV OLD_CPATH=""
ENV CPATH=/opt/hpcx/ompi/include:/opt/hpcx/ucc/include:/opt/hpcx/ucx/include:/opt/hpcx/sharp/include:/opt/hpcx/hcoll/include:
ENV PKG_CONFIG_PATH=/opt/hpcx/hcoll/lib/pkgconfig:/opt/hpcx/sharp/lib/pkgconfig:/opt/hpcx/ucx/lib/pkgconfig:/opt/hpcx/ompi/lib/pkgconfig:
# End of auto-generated paths

ENV ENV_BASEIMAGE_CUDA_VERISON=<<ENV_BASEIMAGE_CUDA_VERISON>>
ENV ENV_BASEIMAGE_OS_VERISON=<<ENV_BASEIMAGE_OS_VERISON>>
ENV ENV_VERSION_PERFTEST=<<ENV_VERSION_PERFTEST>>
ENV ENV_VERSION_NCCLTEST=<<ENV_VERSION_NCCLTEST>>
ENV ENV_VERSION_HPCX=<<ENV_VERSION_HPCX>>



RUN chmod +x /entry.sh
CMD ["/entry.sh"]
